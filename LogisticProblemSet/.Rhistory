ggplot(barley, aes(x = year, y = variety, fill = yield)) +
geom_tile() +
facet_wrap( ~ site, ncol = 1) +
scale_fill_gradientn(colors = myColors) +
theme_economist(legend.position = "right")
myColors <- brewer.pal(9, "Reds")
ggplot(barley, aes(x = year, y = variety, fill = yield)) +
geom_tile() +
facet_wrap( ~ site, ncol = 1) +
scale_fill_gradientn(colors = myColors) +
theme_economist() +
theme(legend.position = "right")
library(ggplot2)
library(ggthemes)
library(dplyr)
library(tidyr)
rad <- read.csv('../Desktop/Analytical Summary Table with RAD.csv',
stringsAsFactors = FALSE,
na.strings = c("NA", "-"))
rad[5:61] <- lapply(rad[5:61], as.numeric)
rad <- rad %>% mutate(radTotal = ra226 + ra228)
fancy_format <- function(x) {
x <- lapply(x, function(x) paste0(x/1000, "k"))
}
metalsDissolved <- rad.long %>% filter(grepl("^metalsD_ba|^metalsD_ca|^metalsD_sr", typeMeasure) & !is.na(value))
rad.long <- gather(rad, key = typeMeasure, value = value, carbonD_inorganic:metalsD_zn)
ggplot(subset(rad.long,
grepl("^metalsD_ca$|^metalsD_ba$", rad.long$typeMeasure) &
!is.na(value)),
aes(x = tds, y = value, col = typeMeasure, size = radTotal)) +
geom_point() +
scale_color_hc(name = "Metal Analyzed",
breaks = c("metalsD_ba", "metalsD_ca"),
labels = c("Barium", "Calcium")) +
theme_fivethirtyeight() +
theme(legend.title = element_text(size = 8),
legend.text = element_text(size = 8)) +
scale_size(name = "Total Radium") +
labs(x = "TDS [mg/L]", y = "Dissolved Concentration [mg/L]") +
geom_text(data = subset(rad.long,
grepl("^metalsD_ca$", rad.long$typeMeasure) &
!is.na(value) & radTotal >= 15000),
aes(label = padname), hjust = 0, nudge_x = 7500, size = 4)
ggplot(metalsDissolved, aes(x = tds, y = value, col = typeMeasure, size = radTotal, group = typeMeasure)) +
geom_point() +
scale_x_continuous(name = "TDS", labels = fancy_format, breaks = seq(0, 400000, by = 50000)) +
scale_color_solarized(name = "Metals",
breaks = c("metalsD_ba", "metalsD_ca", "metalsD_sr"),
labels = c("Barium", "Calcium", "Strontium")) +
theme_solarized_2(light = FALSE) +
geom_smooth()
metalsDissolved <- rad.long %>% filter(grepl("^metalsD_ba|^metalsD_ca|^metalsD_sr", typeMeasure) & !is.na(value))
ggplot(metalsDissolved, aes(x = tds, y = value, col = typeMeasure, size = radTotal, group = typeMeasure)) +
geom_point() +
scale_x_continuous(name = "TDS", labels = fancy_format, breaks = seq(0, 400000, by = 50000)) +
scale_color_solarized(name = "Metals",
breaks = c("metalsD_ba", "metalsD_ca", "metalsD_sr"),
labels = c("Barium", "Calcium", "Strontium")) +
theme_solarized_2(light = FALSE) +
geom_smooth()
ggplot(metalsDissolved, aes(x = tds, y = value, col = typeMeasure, size = radTotal, group = typeMeasure)) +
geom_point() +
scale_x_continuous(name = "TDS", labels = fancy_format, breaks = seq(0, 400000, by = 50000)) +
scale_color_solarized(name = "Metals",
breaks = c("metalsD_ba", "metalsD_ca", "metalsD_sr"),
labels = c("Barium", "Calcium", "Strontium")) +
theme_solarized_2(light = FALSE)
ggplot(subset(rad.long,
grepl("^metalsD_ca$|^metalsD_ba$", rad.long$typeMeasure) &
!is.na(value)),
aes(x = tds, y = value, col = typeMeasure, size = radTotal)) +
geom_point() +
scale_color_hc(name = "Metal Analyzed",
breaks = c("metalsD_ba", "metalsD_ca"),
labels = c("Barium", "Calcium")) +
theme_fivethirtyeight() +
theme(legend.title = element_text(size = 8),
legend.text = element_text(size = 8)) +
scale_size(name = "Total Radium") +
labs(x = "TDS [mg/L]", y = "Dissolved Concentration [mg/L]") +
geom_text(data = subset(rad.long,
grepl("^metalsD_ca$", rad.long$typeMeasure) &
!is.na(value) & tds >= 250000),
aes(label = padname), hjust = 0, nudge_x = 7500, size = 4)
ggplot(rad, aes(x = metalsD_ba, y = metalsD_ca, size = radTotal, col = tds)) +
geom_point() +
scale_color_gradient2("TDS", low = "white", high = "red") +
theme_solarized_2(light = FALSE)
ggplot(metalsDissolved, aes(x = padname, y = value, fill = typeMeasure)) +
geom_bar(stat = 'identity', position = 'stack')
ggplot(metalsDissolved, aes(x = padname, y = value, fill = typeMeasure)) +
geom_bar(stat = 'identity', position = 'stack') +
theme_solarized_2(light = FALSE) +
scale_fill_solarized(accent = "red")
ggplot(metalsDissolved, aes(x = padname, y = value, fill = typeMeasure)) +
geom_bar(stat = 'identity', position = 'stack') +
theme_solarized_2(light = FALSE) +
scale_fill_solarized(accent = "red") +
geom_line(aes(y = radTotal))
ggplot(metalsDissolved, aes(x = sampleID, y = value, fill = typeMeasure)) +
geom_bar(stat = 'identity', position = 'stack') +
theme_solarized_2(light = FALSE) +
scale_fill_solarized(accent = "red") +
geom_line(aes(y = radTotal))
ggplot(metalsDissolved, aes(x = sampleID, y = value)) +
geom_bar(stat = 'identity', position = 'stack') +
theme_solarized_2(light = FALSE) +
scale_fill_solarized(accent = "red") +
geom_line(aes(y = radTotal))
rad <- read.csv('../Desktop/Analytical Summary Table with RAD.csv',
stringsAsFactors = FALSE,
na.strings = c("NA", "-"))
rad[5:61] <- lapply(rad[5:61], as.numeric)
rad <- rad %>% mutate(radTotal = ra226 + ra228)
source('C:/Users/castillo/dev/R/Work/rad_analysis.R', echo=TRUE)
?predict
setwd("C:\Users\castillo")
setwd("C:/Users/castillo/")
ls
ls()
dir()
setwd("Documents/")
dir()
we.df <- read.csv("WE_estimate.csv", stringsAsFactors = F)
we.df <- subset(we.df, EXCLUDE == 0)
library(ggplot2)
factor(we.df$AidStation)
?factor
?paste
lev <- paste0("AS", 1:10)
lev
lev <- c(lev, "FINISH")
we.df$AidStation <- as.factor(we.df$AidStation, levels)
we.df$AidStation <- as.factor(we.df$AidStation, levels = lev)
we.df$AidStation <- as.factor(we.df$AidStation, lables = lev)
we.df$AidStation <- as.factor(we.df$AidStation, labels = lev)
we.df$AidStation <- factor(we.df$AidStation, labels = lev)
we.df$AidStation <- factor(we.df$AidStation, levels = lev)
str(we.df)
levels(we.df$AidStation)
ggplot(we.df, aes(x = AidStation, y = decBetween)) + geom_point()
library(dplyr)
we.df %>% rename(Average.Pace..min.mile. = avgPaceBetween)
we.df %>% rename("Average.Pace..min.mile." = "avgPaceBetween")
we.df %>% rename(Average.Pace..min.mile. = "avgPaceBetween")
?rename
rename(we.df, Average.Pace..min.mile. = avgPaceBetween)
rename(we.df, paceBetween = Average.Pace..min.mile.)
we.df <- rename(we.df, paceBetween = Average.Pace..min.mile.)
ggplot(we.df, aes(x = AidStation, y = paceBetween)) + geom_point()
ggplot(we.df, aes(x = AidStation, y = paceBetween)) + geom_jitter()
ggplot(we.df, aes(x = AidStation, y = paceBetween)) + geom_point(summary = 'stat', fun.y = mean)
ggplot(we.df, aes(x = AidStation, y = paceBetween)) + geom_point(stat = 'summary', fun.y = mean)
library(ggthemes)
ggplot(we.df, aes(x = AidStation, y = paceBetween)) + geom_point(stat = 'summary', fun.y = mean) + theme_solarized_2(light = F)
ggplot(we.df, aes(x = AidStation, y = paceBetween, col = ID)) + geom_point() + theme_solarized_2(light = F)
ggplot(we.df, aes(x = AidStation, y = paceBetween, col = ID)) + geom_point() + theme_solarized_2(light = F) + scale_color_solarized(accent = "blue")
ggplot(we.df, aes(x = AidStation, y = paceBetween, col = ID)) + geom_point() + theme_solarized_2(light = F) + scale_color_solarized()
ggplot(we.df, aes(x = AidStation, y = paceBetween, col = ID)) + geom_point() + theme_solarized_2(light = F) + scale_color_hc()
ggplot(we.df, aes(x = AidStation, y = paceBetween, col = ID)) + geom_point() + theme_solarized_2(light = F) + scale_color_gradient2()
ggplot(we.df, aes(x = AidStation, y = paceBetween, col = ID)) + geom_point() + theme_fivethirtyeight(light = F) + scale_color_gradient2()
ggplot(we.df, aes(x = AidStation, y = paceBetween, col = ID)) + geom_point() + theme_fivethirtyeight() + scale_color_gradient2()
ggplot(we.df, aes(x = AidStation, y = paceBetween, col = ID)) + geom_point() + theme_economist() + scale_color_gradient2()
ggplot(we.df, aes(x = AidStation, y = paceBetween, col = ID)) + geom_point() + theme_economist() + scale_color_gradient2(low = "red", high = "light grey")
ggplot(we.df, aes(x = AidStation, y = paceBetween, col = ID)) + geom_point() + theme_economist() + scale_color_gradient2(midpoint = 15, low = "red", high = "light grey")
ggplot(we.df, aes(x = AidStation, y = paceBetween, col = ID)) + geom_point() + theme_economist() + scale_color_gradient2(midpoint = 15, low = "red", high = "light blue")
ggplot(we.df, aes(x = AidStation, y = paceBetween, col = ID)) + geom_point() + theme_economist() + scale_color_gradient2(midpoint = 15, low = "#fc2c0d", high = "#190401")
ggplot(we.df, aes(x = AidStation, y = paceBetween, col = ID)) + geom_point() + theme_economist() + scale_color_gradient2(midpoint = 30, low = "#fc2c0d", high = "#190401")
ggplot(we.df, aes(x = AidStation, y = paceBetween, col = ID)) + geom_point() + theme_economist() + scale_color_gradient2(midpoint = 30, low = "#fc2c0d", mid = "#190401")
ggplot(we.df, aes(x = AidStation, y = paceBetween, col = ID)) + geom_point() + theme_economist() + scale_color_gradient2(midpoint = 30, low = "#fd806d", mid = "#190401")
ggplot(we.df, aes(x = AidStation, y = paceBetween, col = ID)) + geom_point() + theme_economist() + scale_color_gradient2(midpoint = 30, low = "#fed4ce", mid = "#971a07")
ggplot(we.df, aes(x = AidStation, y = paceBetween, col = ID)) + geom_point() + theme_foundation() + scale_color_gradient2(midpoint = 30, low = "#fed4ce", mid = "#971a07")
ggplot(we.df, aes(x = AidStation, y = paceBetween, col = ID)) + geom_point() + theme_pander() + scale_color_gradient2(midpoint = 30, low = "#fed4ce", mid = "#971a07")
ggplot(we.df, aes(x = AidStation, y = paceBetween, col = ID)) + geom_point() + theme_solarized_2(light = F) + scale_color_gradient2(midpoint = 30, low = "#fed4ce", mid = "#971a07")
ggplot(we.df, aes(x = AidStation, y = splitDifference, col = ID)) + geom_point() + theme_solarized_2(light = F) + scale_color_gradient2(midpoint = 30, low = "#fed4ce", mid = "#971a07")
ggplot(we.df, aes(x = AidStation, y = splitDifference, col = factor(ID)) + geom_point() + theme_solarized_2(light = F) + scale_color_gradient2(midpoint = 30, low = "#fed4ce", mid = "#971a07")
ggplot(we.df, aes(x = AidStation, y = splitDifference, col = ID, group = ID)) + geom_point() + theme_solarized_2(light = F) + scale_color_gradient2(midpoint = 30, low = "#fed4ce", mid = "#971a07")
ggplot(we.df, aes(x = AidStation, y = splitDifference, col = ID, group = ID)) + geom_point() + theme_solarized_2(light = F) + scale_color_gradient2(midpoint = 30, low = "#fed4ce", mid = "#971a07")
ggplot(we.df, aes(x = AidStation, y = splitDifference)) + geom_point(stat = 'summary', fun.y = mean) + theme_solarized_2(light = F) + scale_color_gradient2(midpoint = 30, low = "#fed4ce", mid = "#971a07")
ggplot(we.df, aes(x = AidStation, y = splitDifference)) + geom_point(stat = 'summary', fun.y = mean, col = "#fc2c0d") + theme_solarized_2(light = F) + scale_color_gradient2(midpoint = 30, low = "#fed4ce", mid = "#971a07")
ggplot(we.df, aes(x = AidStation, y = splitDifference)) + geom_point(stat = 'summary', fun.y = mean, col = "#fc2c0d") + theme_solarized_2(light = F) + scale_color_gradient2(midpoint = 30, low = "#fed4ce", mid = "#971a07") + geom_smooth()
View(we.df)
setwd("C:/Users/castillo/Documents")
we.df <- read.csv("WE_estimate.csv", stringsAsFactors = F)
distinct(we.df$AidStation)
lev <- paste0("AS", 1:12)
we.df <- rename(we.df, paceBetween = Average.Pace..min.mile.)
lev <- paste0("AS", 1:12)
lev <- c(lev, "FINISH")
we.df$AidStation <- factor(we.df$AidStation, levels = lev)
we.df <- subset(we.df, EXCLUDE == 0)
ggplot(we.df, aes(x = ID, y = AveragePace)) +
geom_point()
ggplot(we.df, aes(x = ID, y = AveragePace)) +
geom_point() +
theme_wsj()
ggplot(we.df, aes(x = ID, y = AveragePace)) +
geom_point() +
theme_fivethirtyeight()
ggplot(we.df, aes(x = ID, y = AveragePace)) +
geom_point() +
theme_hc()
ggplot(we.df, aes(x = ID, y = AveragePace)) +
geom_point() +
theme_solarized_2(light = FALSE)
ggplot(we.df, aes(x = ID, y = AveragePace)) +
geom_point(col = "#fc2c0d") +
theme_solarized_2(light = FALSE)
ggplot(we.df, aes(x = AidStation, y = decBetween)) +
geom_point(col = "#fc2c0d") +
theme_solarized_2(light = F)
ggplot(we.df, aes(x = AidStation, y = paceBetween)) +
geom_point(col = "#fc2c0d") +
theme_solarized_2(light = F)
ggplot(we.df, aes(x = AidStation, y = paceBetween)) +
geom_point(col = "#fc2c0d", stat = 'summary', fun.y = mean) +
theme_solarized_2(light = F)
ggplot(we.df, aes(x = AidStation, y = splitDifference)) +
geom_point(col = "#fc2c0d") +
theme_solarized_2(light = F)
ggplot(we.df, aes(x = AidStation, y = splitDifference)) +
geom_point(col = "#00d27f") +
theme_solarized_2(light = F)
ggplot(we.df, aes(x = AidStation, y = splitDifference)) +
geom_point(col = "#00d27f", stat = 'summary', fun.y = mean) +
theme_solarized_2(light = F)
?kmeans
library(maptools)
we.traverse <- read.csv("C:/Users/castillo/Downloads/WorldsEndTraverse.csv", stringsAsFactors = F)
str(we.traverse)
summary(we.traverse)
gpxTry <- readGPS("C:/Users/castillo/Downloads/WorldsEndTraverse.gpx")
install.packages("caret")
library(caret)
library(mlbench)
install.packages("mlbench")
library(mlbench)
data(Sonar)
str(Sonar[, 1:10])
library(caret)
set.seed(998)
inTraining <- createDataPartition(Sonar$Class, p = 0.75, list = FALSE)
0.75*208
?Sonar
View(Sonar)
?createDataPartition
training <-Sonar[inTraining,]
testing <- Sonar[-inTraining,]
fitControl <- trainControl(method = "repeatedcv", number = 10, repeats = 10)
fitControl
set.seed(825)
gbmFit1 <- train(Class ~ ., data = training,
method = "gbm",
trControl = fitControl,
verbose = FALSE)
gbmFit1 <- train(Class ~ ., data = training,
method = "gbm",
trControl = fitControl,
verbose = FALSE)
install.packages("e1071")
gbmFit1 <- train(Class ~ ., data = training,
method = "gbm",
trControl = fitControl,
verbose = FALSE)
gbmFit1
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2: load NHIS data
setwd("C:/Users/Tomas/OneDrive/School/Springboard/FoundationsDS/in-depth/LogisticProblemSet/")
NH11 <- readRDS("dataSets/NatHealth2011.rds")
labs <- attributes(NH11)$labels
# Chunk 3: refactor hypertension
str(NH11$hypev) # Check the structure
levels(NH11$hypev) # Check the leveles
summary(NH11$hypev) # Current state - note the NAs
## Collapse all missing values to NA
NH11$hypev <- factor(NH11$hypev, levels = c("2 No", "1 Yes"))
summary(NH11$hypev) # Updated output
# Chunk 4: Initial regression model
hyp.out <- glm(hypev ~ age_p + sex + sleep + bmi,
data = NH11,
family = 'binomial')
coef(summary(hyp.out))
# Chunk 5: initial regression transformation
hyp.out.tab <- coef(summary(hyp.out))
hyp.out.tab[, 'Estimate'] <- exp(coef(hyp.out))
hyp.out.tab
# Chunk 6: Predicting levels
## Createing the dataset from our full NH11
predData <- with(NH11,
expand.grid(age_p = c(33, 63),
sex = "2 Female",
bmi = mean(bmi, na.rm = TRUE),
sleep = mean(sleep, na.rm = TRUE)))
## Predict hypertension at those levels
cbind(predData, predict(hyp.out,
type = 'response',
se.fit = TRUE,
interval = 'confidence',
newdata = predData))
# Chunk 7: effects package
library(effects)
plot(allEffects(hyp.out))
# Chunk 8: ever worked initial
summary(NH11$everwrk)
wrkd.mod1 <- glm(everwrk ~ age_p + r_maritl,
data = NH11,
family = 'binomial')
summary(wrkd.mod1)
# Chunk 9: summary of age and marital status
summary(NH11$age_p)
hist(NH11$age_p, breaks = seq(18, 85, 1))
summary(subset(NH11, !is.na(everwrk))$r_maritl)
levels(NH11$r_maritl)
plot(NH11$r_maritl,
legend.text = levels(NH11$r_maritl))
# Chunk 10: subset of NH11
NH11.sub <- subset(NH11, age_p > 18 & age_p < 85 & !is.na(everwrk) &
(everwrk == "1 Yes" | everwrk == "2 No"),
r_maritl)
# Chunk 11: correlation matrix
wrkd.mod2 <- glm(everwrk ~ age_p + r_maritl,
data = NH11.sub,
family = "binomial")
summary(wrkd.mod2)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2: load NHIS data
setwd("C:/Users/castillo/OneDrive/School/Springboard/FoundationsDS/in-depth/LogisticProblemSet/")
NH11 <- readRDS("dataSets/NatHealth2011.rds")
labs <- attributes(NH11)$labels
# Chunk 3: refactor hypertension
str(NH11$hypev) # Check the structure
levels(NH11$hypev) # Check the leveles
summary(NH11$hypev) # Current state - note the NAs
## Collapse all missing values to NA
NH11$hypev <- factor(NH11$hypev, levels = c("2 No", "1 Yes"))
summary(NH11$hypev) # Updated output
# Chunk 4: Initial regression model
hyp.out <- glm(hypev ~ age_p + sex + sleep + bmi,
data = NH11,
family = 'binomial')
coef(summary(hyp.out))
# Chunk 5: initial regression transformation
hyp.out.tab <- coef(summary(hyp.out))
hyp.out.tab[, 'Estimate'] <- exp(coef(hyp.out))
hyp.out.tab
# Chunk 6: Predicting levels
## Createing the dataset from our full NH11
predData <- with(NH11,
expand.grid(age_p = c(33, 63),
sex = "2 Female",
bmi = mean(bmi, na.rm = TRUE),
sleep = mean(sleep, na.rm = TRUE)))
## Predict hypertension at those levels
cbind(predData, predict(hyp.out,
type = 'response',
se.fit = TRUE,
interval = 'confidence',
newdata = predData))
# Chunk 7: effects package
library(effects)
plot(allEffects(hyp.out))
# Chunk 8: ever worked initial
summary(NH11$everwrk)
wrkd.mod1 <- glm(everwrk ~ age_p + r_maritl,
data = NH11,
family = 'binomial')
summary(wrkd.mod1)
# Chunk 9: summary of age and marital status
summary(NH11$age_p)
hist(NH11$age_p, breaks = seq(18, 85, 1))
summary(subset(NH11, !is.na(everwrk))$r_maritl)
levels(NH11$r_maritl)
plot(NH11$r_maritl,
legend.text = levels(NH11$r_maritl))
# Chunk 10: subset of NH11
NH11.sub <- subset(NH11, age_p > 18 & age_p < 85 & !is.na(everwrk) &
(everwrk == "1 Yes" | everwrk == "2 No"),
r_maritl)
# Chunk 11: correlation matrix
wrkd.mod2 <- glm(everwrk ~ age_p + r_maritl,
data = NH11.sub,
family = "binomial")
summary(wrkd.mod2)
NH11.sub <- subset(NH11, age_p > 18 & age_p < 85 & !is.na(everwrk) &
(everwrk == "1 Yes" | everwrk == "2 No"))
wrkd.mod2 <- glm(everwrk ~ age_p + r_maritl,
data = NH11.sub,
family = "binomial")
summary(wrkd.mod2)
test <- NH11.sub$r_maritl
levels(test)
levels(test)[2,4]
levels(test)[c(2,4,5)]
levels(test)[which(table(NH11.sub$r_maritl) > 0)]
usable.maritl <- levels(NH11.sub$r_maritl)[which(table(NH11.sub$r_maritl) > 0)]
predData <- with(NH11.sub,
expand.grid(r_maritl = usable.maritl),
age = mean(bmi, na.rm = TRUE)))
cbind(predData,
predict(wrkd.mod2,
type='response',
se.fit=TRUE,
interval = 'confidence',
newData = predData))
predData <- with(NH11.sub,
expand.grid(r_maritl = usable.maritl,
age = mean(bmi, na.rm = TRUE)))
cbind(predData,
predict(wrkd.mod2,
type='response',
se.fit=TRUE,
interval = 'confidence',
newData = predData))
predData
## Createing the dataset from our full NH11
predData <- with(NH11,
expand.grid(age_p = c(33, 63),
sex = "2 Female",
bmi = mean(bmi, na.rm = TRUE),
sleep = mean(sleep, na.rm = TRUE)))
## Predict hypertension at those levels
cbind(predData, predict(hyp.out,
type = 'response',
se.fit = TRUE,
interval = 'confidence',
newdata = predData))
predData
hyp.out
predData <- with(NH11.sub,
expand.grid(r_maritl = usable.maritl,
age = mean(bmi, na.rm = TRUE)))
cbind(predData,
predict(wrkd.mod2,
type='response',
se.fit=TRUE,
interval = 'confidence',
newData = predData))
wrkd.mod2
summary(wrkd.mod2)
usable.maritl[2:]
usable.maritl[-1]
predData <- with(NH11.sub,
expand.grid(r_maritl = usable.maritl[-1],
age = mean(bmi, na.rm = TRUE)))
cbind(predData,
predict(wrkd.mod2,
type='response',
se.fit=TRUE,
interval = 'confidence',
newData = predData))
predData <- with(NH11.sub,
expand.grid(r_maritl = usable.maritl[-1],
age = mean(bmi, na.rm = TRUE)))
cbind(predData,
predict(wrkd.mod2,
type='response',
se.fit=TRUE,
interval = 'confidence',
newdata = predData))
predData <- with(NH11.sub,
expand.grid(r_maritl = usable.maritl[-1],
age_p = mean(bmi, na.rm = TRUE)))
cbind(predData,
predict(wrkd.mod2,
type='response',
se.fit=TRUE,
interval = 'confidence',
newdata = predData))
predData <- with(NH11.sub,
expand.grid(r_maritl = usable.maritl,
age_p = mean(bmi, na.rm = TRUE)))
cbind(predData,
predict(wrkd.mod2,
type='response',
se.fit=TRUE,
interval = 'confidence',
newdata = predData))
predData <- with(NH11.sub,
expand.grid(r_maritl = levels(r_maritl),
age_p = mean(bmi, na.rm = TRUE)))
cbind(predData,
predict(wrkd.mod2,
type='response',
se.fit=TRUE,
interval = 'confidence',
newdata = predData))
usable.maritl <- levels(NH11.sub$r_maritl)[
which(table(NH11.sub$r_maritl) > 0)]
## Setup variable for proper r_maritl levels (non-zero)
usable.maritl <- levels(NH11.sub$r_maritl)[
which(table(NH11.sub$r_maritl) > 0)]
## Setup a predicting
predData <- with(NH11.sub,
expand.grid(r_maritl = usable.maritl,
age_p = mean(bmi, na.rm = TRUE)))
cbind(predData,
predict(wrkd.mod2,
type='response',
se.fit=TRUE,
interval = 'confidence',
newdata = predData))
library(dplyr)
NH11.sub %>% group_by(r_maritl) %>% summarise(count = n())
table(NH11.sub$r_maritl)
install.packages("effects")
plot(allEffects(wrkd.mod2))
library(effects)
plot(allEffects(wrkd.mod2))
usable.maritl[4]
NH11 %>% group_by(r_maritl) %>% summarise(count = n())
